__d(function(g,r,i,a,m,e,d){Object.defineProperty(e,"__esModule",{value:!0});var t=r(d[0]),n=r(d[1]),o=(function(){function o(t){if(void 0===t&&(t={}),this._options=t,this.name=o.id,!Array.isArray(t.tracingOrigins)||0===t.tracingOrigins.length){var c=['localhost',/^\//];n.logger.warn('Sentry: You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.'),n.logger.warn("Sentry: We added a reasonable default for you: "+c),t.tracingOrigins=c}}return o.prototype.setupOnce=function(t,c){!1!==this._options.traceXHR&&this._traceXHR(c),!1!==this._options.traceFetch&&this._traceFetch(c),!1!==this._options.autoStartOnDomReady&&(n.getGlobalObject().addEventListener('DOMContentLoaded',function(){o.startTrace(c(),n.getGlobalObject().location.href)}),n.getGlobalObject().document.onreadystatechange=function(){'complete'===document.readyState&&o.startTrace(c(),n.getGlobalObject().location.href)})},o.startTrace=function(t,n){t.configureScope(function(t){t.startSpan(),t.setTransaction(n)})},o.prototype._traceXHR=function(t){if('XMLHttpRequest'in n.getGlobalObject()){var c=XMLHttpRequest.prototype;n.fill(c,'open',function(n){return function(){for(var c=[],s=0;s<arguments.length;s++)c[s]=arguments[s];var u=t().getIntegration(o);return u&&(u._xhrUrl=c[1]),n.apply(this,c)}}),n.fill(c,'send',function(c){return function(){for(var s=this,u=[],l=0;l<arguments.length;l++)u[l]=arguments[l];var f=t().getIntegration(o);if(f&&f._xhrUrl&&f._options.tracingOrigins){var h=f._xhrUrl,p=t().traceHeaders();f._options.tracingOrigins.some(function(t){return n.isMatchingPattern(h,t)})&&this.setRequestHeader&&Object.keys(p).forEach(function(t){s.setRequestHeader(t,p[t])})}return c.apply(this,u)}})}},o.prototype._traceFetch=function(c){n.supportsNativeFetch()&&n.fill(n.getGlobalObject(),'fetch',function(s){return function(){for(var u=[],l=0;l<arguments.length;l++)u[l]=arguments[l];var f=c().getIntegration(o);if(f&&f._options.tracingOrigins){var h=u[0],p=u[1]=u[1]||{},_=!1;f._options.tracingOrigins.forEach(function(t){_||(_=n.isMatchingPattern(h,t))}),_&&(p.headers?Array.isArray(p.headers)?p.headers=t.__spread(p.headers,Object.entries(c().traceHeaders())):p.headers=t.__assign({},p.headers,c().traceHeaders()):p.headers=c().traceHeaders())}return s.apply(n.getGlobalObject(),u)}})},o.id='Tracing',o})();e.Tracing=o},2035,[1972,1975]);