__d(function(g,r,i,a,m,e,d){Object.defineProperty(e,"__esModule",{value:!0}),e.default=e.isInsideOperationZone=void 0;var t=b(r(d[0])),o=r(d[1]),n=b(r(d[2])),l=b(r(d[3])),u=b(r(d[4])),c=r(d[5]),s=r(d[6]),f=b(r(d[7])),p=b(r(d[8])),y=b(r(d[9]));function b(t){return t&&t.__esModule?t:{default:t}}function h(t,o){return C(t)||S(t,o)||v()}function v(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function S(t,o){if(("function"==typeof Symbol?Symbol.iterator:"@@iterator")in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)){var n=[],l=!0,u=!1,c=void 0;try{for(var s,f=t["function"==typeof Symbol?Symbol.iterator:"@@iterator"]();!(l=(s=f.next()).done)&&(n.push(s.value),!o||n.length!==o);l=!0);}catch(t){u=!0,c=t}finally{try{l||null==f.return||f.return()}finally{if(u)throw c}}return n}}function C(t){if(Array.isArray(t))return t}function E(t,o){if(!(t instanceof o))throw new TypeError("Cannot call a class as a function")}function P(t,o){for(var n=0;n<o.length;n++){var l=o[n];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(t,l.key,l)}}function F(t){return(F=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function L(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function O(t,o){if("function"!=typeof o&&null!==o)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(o&&o.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),o&&U(t,o)}function U(t,o){return(U=Object.setPrototypeOf||function(t,o){return t.__proto__=o,t})(t,o)}var _={longitude:10.7398053,latitude:59.9131026},w={floatingButtonBottom:{position:'absolute',bottom:18}},x=n.default.StyleSheet.create({carSymbol:{iconAllowOverlap:!0,iconImage:'{icon}',iconSize:n.default.StyleSheet.camera({14:.8,18:1.2},n.default.InterpolationMode.Exponential)},hotspotSymbol:{iconImage:'{icon}',iconSize:n.default.StyleSheet.camera({14:.8,16:1},n.default.InterpolationMode.Linear),textAnchor:'top',textOffset:[0,1.25],textColor:p.default.darkGreen,textField:'{name}',textOpacity:n.default.StyleSheet.camera({1:0,14:0,16:1},n.default.InterpolationMode.Exponential)}}),k=(function(u){function b(t){var o,u,c;return E(this,b),u=this,(o=!(c=F(b).call(this,t))||"object"!=typeof c&&"function"!=typeof c?L(u):c).map=null,(0,l.default)(),o.state={carsFeatureCollection:n.default.geoUtils.makeFeatureCollection(),hotspotsFeatureCollection:n.default.geoUtils.makeFeatureCollection()},o.onLocationUpdate=o.onLocationUpdate.bind(L(o)),o.onCarFeaturePress=o.onCarFeaturePress.bind(L(o)),o}var v,S,C;return O(b,t.default.Component),v=b,(S=[{key:"componentDidUpdate",value:function(t){var o=this,n=!(0,c.arrayEquals)(t.cars,this.props.cars)&&this.props.cars.length>0;(n&&this.setState({carsFeatureCollection:B(this.props.cars),hotspotsFeatureCollection:j(this.props.hotspots)}),this.props.location)&&(n&&T(this.props.location)&&setTimeout(function(){z(o.props.cars,o.props.location,o.map)},750))}},{key:"onLocationUpdate",value:function(t){var o={latitude:t.coords.latitude,longitude:t.coords.longitude};this.props.onLocationUpdate(o)}},{key:"onCarFeaturePress",value:function(t){var o=this,n=t.nativeEvent.payload,l=n.properties.id,u=n.geometry.coordinates,c=h(this.props.cars.filter(function(t){return t.id===l}),1)[0];this.setState({carsFeatureCollection:B(this.props.cars,l)},function(){G(u,o.map),o.props.onSelectCar(c)})}},{key:"render",value:function(){var l=this;return t.default.createElement(o.View,{style:{flex:1}},t.default.createElement(n.default.MapView,{ref:function(t){return l.map=t},styleURL:"mapbox://styles/nsbapp/cjnoi2zbu1a502sqo9b23cwf3",zoomLevel:9.5,minZoomLevel:9.5,maxZoomLevel:22,centerCoordinate:I(_),showUserLocation:!0,onUserLocationUpdate:this.onLocationUpdate,logoEnabled:!1,attributionEnabled:!1,style:{flex:1}},t.default.createElement(n.default.ShapeSource,{id:"bybil-cars",shape:this.state.carsFeatureCollection,images:{bybilPinGreen:s.bybilPinGreen,bybilPinBlue:s.bybilPinBlue},hitbox:{width:20,height:20},onPress:this.onCarFeaturePress},t.default.createElement(n.default.SymbolLayer,{id:"bybil-car",minZoomLevel:8,style:x.carSymbol})),t.default.createElement(n.default.ShapeSource,{id:"bybil-hotspots",shape:this.state.hotspotsFeatureCollection,images:{bybilHotspotGrey:s.bybilHotspotGrey}},t.default.createElement(n.default.SymbolLayer,{id:"bybil-hotspot",aboveLayerId:"bybil-car",minZoomLevel:8,style:x.hotspotSymbol}))),'authorized'===this.props.locationAuthorization&&t.default.createElement(y.default,{positionStyle:[w.floatingButtonBottom,{right:12}],icon:s.locationBybil,text:(0,f.default)('accessibility_button_location'),onPress:function(){return M(l.props.location,l.map)}}),t.default.createElement(y.default,{style:{backgroundColor:p.default.darkGreen},positionStyle:[w.floatingButtonBottom,{left:12}],icon:s.questionButton,text:(0,f.default)('accessibility_button_help'),onPress:this.props.toggleInformationModal}),t.default.createElement(o.Image,{resizeMode:"contain",source:s.mapboxLogo,style:[w.floatingButtonBottom,{left:60}]}))}}])&&P(v.prototype,S),C&&P(v,C),b})(),B=function(t,o){var l=n.default.geoUtils.makeFeatureCollection();return t.forEach(function(t){n.default.geoUtils.addToFeatureCollection(l,n.default.geoUtils.makeFeature({type:'Point',coordinates:I(t.location)},{icon:o===t.id?'bybilPinBlue':'bybilPinGreen',id:t.id}))}),l},j=function(t){var o=n.default.geoUtils.makeFeatureCollection();return t.forEach(function(t){n.default.geoUtils.addToFeatureCollection(o,n.default.geoUtils.makeFeature({type:'Point',coordinates:I(t.location)},{icon:'bybilHotspotGrey',name:t.name}))}),o},I=function(t){return[t.longitude,t.latitude]},z=function(t,o,n){var l=h(t,1)[0].location,u=I(l),c=I(o);n&&n.fitBounds(c,u,[100,100],1e3)},G=function(t,o){o&&t&&o.moveTo(t,250)},M=function(t,o){o&&t&&o.setCamera({centerCoordinate:I(t),zoom:12,duration:1e3})},T=function(t){return(0,u.default)(t,_)<=40};e.isInsideOperationZone=function(t){return!!t&&T(t)};var A=k;e.default=A},1400,[7,10,1401,1431,1395,643,675,1397,415,1432]);