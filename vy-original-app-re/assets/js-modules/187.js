__d(function(g,r,i,a,m,e,d){'use strict';function t(t,o){var s=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);o&&(n=n.filter(function(o){return Object.getOwnPropertyDescriptor(t,o).enumerable})),s.push.apply(s,n)}return s}function o(o){for(var n=1;n<arguments.length;n++){var c=null!=arguments[n]?arguments[n]:{};n%2?t(Object(c),!0).forEach(function(t){s(o,t,c[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(o,Object.getOwnPropertyDescriptors(c)):t(Object(c)).forEach(function(t){Object.defineProperty(o,t,Object.getOwnPropertyDescriptor(c,t))})}return o}function s(t,o,s){return o in t?Object.defineProperty(t,o,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[o]=s,t}var n=r(d[0]),c=r(d[1]),p=r(d[2]),u=r(d[3]),l=r(d[4]),h=r(d[5]),b=r(d[6]),f=r(d[7]),y=r(d[8]),P=r(d[9]),R=r(d[10]),F=p.shape({type:p.oneOf(['RippleAndroid']),color:p.number,borderless:p.bool}),S=p.shape({type:p.oneOf(['ThemeAttrAndroid']),attribute:p.string.isRequired}),v=p.oneOfType([F,S]),O={top:20,left:20,right:20,bottom:30},A=y({displayName:'TouchableNativeFeedback',propTypes:o({},h.propTypes,{background:v,hasTVPreferredFocus:p.bool,nextFocusDown:p.number,nextFocusForward:p.number,nextFocusLeft:p.number,nextFocusRight:p.number,nextFocusUp:p.number,useForeground:p.bool}),statics:{SelectableBackground:function(){return{type:'ThemeAttrAndroid',attribute:'selectableItemBackground'}},SelectableBackgroundBorderless:function(){return{type:'ThemeAttrAndroid',attribute:'selectableItemBackgroundBorderless'}},Ripple:function(t,o){return{type:'RippleAndroid',color:R(t),borderless:o}},canUseNativeForeground:function(){return n.Version>=23}},mixins:[l.Mixin],getDefaultProps:function(){return{background:this.SelectableBackground()}},getInitialState:function(){return this.touchableGetInitialState()},componentDidMount:function(){P(this.props)},UNSAFE_componentWillReceiveProps:function(t){P(t)},touchableHandleActivePressIn:function(t){this.props.onPressIn&&this.props.onPressIn(t),this._dispatchPressedStateChange(!0),this.pressInLocation&&this._dispatchHotspotUpdate(this.pressInLocation.locationX,this.pressInLocation.locationY)},touchableHandleActivePressOut:function(t){this.props.onPressOut&&this.props.onPressOut(t),this._dispatchPressedStateChange(!1)},touchableHandlePress:function(t){this.props.onPress&&this.props.onPress(t)},touchableHandleLongPress:function(t){this.props.onLongPress&&this.props.onLongPress(t)},touchableGetPressRectOffset:function(){return this.props.pressRetentionOffset||O},touchableGetHitSlop:function(){return this.props.hitSlop},touchableGetHighlightDelayMS:function(){return this.props.delayPressIn},touchableGetLongPressDelayMS:function(){return this.props.delayLongPress},touchableGetPressOutDelayMS:function(){return this.props.delayPressOut},_handleResponderMove:function(t){this.touchableHandleResponderMove(t),this._dispatchHotspotUpdate(t.nativeEvent.locationX,t.nativeEvent.locationY)},_dispatchHotspotUpdate:function(t,o){b.dispatchViewManagerCommand(u.findNodeHandle(this),b.getViewManagerConfig('RCTView').Commands.hotspotUpdate,[t||0,o||0])},_dispatchPressedStateChange:function(t){b.dispatchViewManagerCommand(u.findNodeHandle(this),b.getViewManagerConfig('RCTView').Commands.setPressed,[t])},render:function(){var t,n=c.Children.only(this.props.children),p=n.props.children;l.TOUCH_TARGET_DEBUG&&n.type===f&&(Array.isArray(p)||(p=[p]),p.push(l.renderDebugView({color:'brown',hitSlop:this.props.hitSlop}))),this.props.useForeground&&!A.canUseNativeForeground()&&console.warn("Requested foreground ripple, but it is not available on this version of Android. Consider calling TouchableNativeFeedback.canUseNativeForeground() and using a different Touchable if the result is false.");var u=this.props.useForeground&&A.canUseNativeForeground()?'nativeForegroundAndroid':'nativeBackgroundAndroid',h=o({},n.props,(s(t={},u,this.props.background),s(t,"accessible",!1!==this.props.accessible),s(t,"accessibilityLabel",this.props.accessibilityLabel),s(t,"accessibilityRole",this.props.accessibilityRole),s(t,"accessibilityStates",this.props.accessibilityStates),s(t,"accessibilityState",this.props.accessibilityState),s(t,"accessibilityActions",this.props.accessibilityActions),s(t,"onAccessibilityAction",this.props.onAccessibilityAction),s(t,"children",p),s(t,"testID",this.props.testID),s(t,"onLayout",this.props.onLayout),s(t,"hitSlop",this.props.hitSlop),s(t,"isTVSelectable",!0),s(t,"nextFocusDown",this.props.nextFocusDown),s(t,"nextFocusForward",this.props.nextFocusForward),s(t,"nextFocusLeft",this.props.nextFocusLeft),s(t,"nextFocusRight",this.props.nextFocusRight),s(t,"nextFocusUp",this.props.nextFocusUp),s(t,"hasTVPreferredFocus",this.props.hasTVPreferredFocus),s(t,"focusable",!1!==this.props.focusable&&void 0!==this.props.onPress&&!this.props.disabled),s(t,"onClick",this.touchableHandlePress),s(t,"onStartShouldSetResponder",this.touchableHandleStartShouldSetResponder),s(t,"onResponderTerminationRequest",this.touchableHandleResponderTerminationRequest),s(t,"onResponderGrant",this.touchableHandleResponderGrant),s(t,"onResponderMove",this._handleResponderMove),s(t,"onResponderRelease",this.touchableHandleResponderRelease),s(t,"onResponderTerminate",this.touchableHandleResponderTerminate),t));return c.cloneElement(n,h)}});m.exports=A},187,[35,7,48,64,178,188,31,62,189,193,56]);